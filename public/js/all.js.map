{"version":3,"sources":["classie.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"all.js","sourcesContent":["/*!\r\n * classie - class helper functions\r\n * from bonzo https://github.com/ded/bonzo\r\n * \r\n * classie.has( elem, 'my-class' ) -> true/false\r\n * classie.add( elem, 'my-new-class' )\r\n * classie.remove( elem, 'my-unwanted-class' )\r\n * classie.toggle( elem, 'my-class' )\r\n */\r\n\r\n/*jshint browser: true, strict: true, undef: true */\r\n/*global define: false */\r\n\r\n( function( window ) {\r\n\r\n'use strict';\r\n\r\n// class helper functions from bonzo https://github.com/ded/bonzo\r\n\r\nfunction classReg( className ) {\r\n  return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\r\n}\r\n\r\n// classList support for class management\r\n// altho to be fair, the api sucks because it won't accept multiple classes at once\r\nvar hasClass, addClass, removeClass;\r\n\r\nif ( 'classList' in document.documentElement ) {\r\n  hasClass = function( elem, c ) {\r\n    return elem.classList.contains( c );\r\n  };\r\n  addClass = function( elem, c ) {\r\n    elem.classList.add( c );\r\n  };\r\n  removeClass = function( elem, c ) {\r\n    elem.classList.remove( c );\r\n  };\r\n}\r\nelse {\r\n  hasClass = function( elem, c ) {\r\n    return classReg( c ).test( elem.className );\r\n  };\r\n  addClass = function( elem, c ) {\r\n    if ( !hasClass( elem, c ) ) {\r\n      elem.className = elem.className + ' ' + c;\r\n    }\r\n  };\r\n  removeClass = function( elem, c ) {\r\n    elem.className = elem.className.replace( classReg( c ), ' ' );\r\n  };\r\n}\r\n\r\nfunction toggleClass( elem, c ) {\r\n  var fn = hasClass( elem, c ) ? removeClass : addClass;\r\n  fn( elem, c );\r\n}\r\n\r\nvar classie = {\r\n  // full names\r\n  hasClass: hasClass,\r\n  addClass: addClass,\r\n  removeClass: removeClass,\r\n  toggleClass: toggleClass,\r\n  // short names\r\n  has: hasClass,\r\n  add: addClass,\r\n  remove: removeClass,\r\n  toggle: toggleClass\r\n};\r\n\r\n// transport\r\nif ( typeof define === 'function' && define.amd ) {\r\n  // AMD\r\n  define( classie );\r\n} else {\r\n  // browser global\r\n  window.classie = classie;\r\n}\r\n\r\n})( window );\r\n","/* \r\n----------------------------------\r\nSome basic rules for the module:\r\n----------------------------------\r\n1.it is self contained\r\n\t-if it should manage more than one job, it should be splited in more than one module\r\n\t-everything to do with this module is in this module\r\n\t-no global variables\r\n2.separation of concerns\r\n3.efficient DOM usage\r\n\t-as few $(selector) or getElementById expressions \r\n4.no memory leaks\r\n\t-all events can be unbound\r\n*/\r\n;(function(window) {\r\n\t'use strict';\r\n\r\n\tvar transEndEventNames = {\r\n\t\t'WebkitTransition': 'webkitTransitionEnd',\r\n\t\t'MozTransition': 'transitionend',\r\n\t\t'OTransition': 'oTransitionEnd',\r\n\t\t'msTransition': 'MSTransitionEnd',\r\n\t\t'transition': 'transitionend'\r\n\t},\r\n\ttransEndEventName = transEndEventNames[ Modernizr.prefixed( 'transition' ) ],\r\n\tsupport = { transitions : Modernizr.csstransitions };\r\n\r\n\tvar StepsForm = function(el, options) {\r\n\t\treturn new StepsForm.init(el, options);\r\n\t}\r\n\r\n\tStepsForm.init = function(el, options) {\r\n\t\tthis.el = el;\r\n\t\tthis.options = options;\r\n\t\t//current step\r\n\t\tthis.current = 0;\r\n\t\t// questions\r\n\t\tthis.questions = [].slice.call( this.el.querySelectorAll( 'ol.questions > li' ) );\r\n\t\t// total questions\r\n\t\tthis.questionsCount = this.questions.length;\r\n\t\t// show first question\r\n\t\tclassie.addClass( this.questions[0], 'current' );\r\n\t\t// next question control\r\n\t\tthis.ctrlNext = this.el.querySelector( 'button.next' );\r\n\t\t// progress bar\r\n\t\tthis.progress = this.el.querySelector( 'div.progress' );\r\n\t\t// question number status\r\n\t\tthis.questionStatus = this.el.querySelector( 'span.number' );\r\n\t\t// current question placeholder\r\n\t\tthis.currentNum = this.questionStatus.querySelector( 'span.number-current' );\r\n\t\tthis.currentNum.innerHTML = Number( this.current + 1 );\r\n\t\t// total questions placeholder\r\n\t\tthis.totalQuestionNum = this.questionStatus.querySelector( 'span.number-total' );\r\n\t\tthis.totalQuestionNum.innerHTML = this.questionsCount;\r\n\r\n\t\t// error message\r\n\t\tthis.error = this.el.querySelector( 'span.error-message' );\r\n\t\t// init events\r\n\t\tthis.initEvents();\r\n\t}\r\n\r\n\tStepsForm.prototype = {\r\n\t\tinitEvents: function() {\r\n\t\t\t//declare variables\r\n\t\t\tvar self = this,\r\n\t\t\t//declare the first input element\r\n\t\t\tfirstElInput = this.questions[this.current].querySelector('input'),\r\n\t\t\t//show the first input element on init\r\n\t\t\tonFocusStartFn = function () {\r\n\t\t\t\tfirstElInput.removeEventListener('focus', onFocusStartFn);\r\n\t\t\t\tclassie.addClass(self.ctrlNext, 'show');\r\n\t\t\t};\r\n\r\n\t\t\tfirstElInput.addEventListener('focus', onFocusStartFn);\r\n\r\n\t\t\tthis.ctrlNext.addEventListener('click', function(event){\t\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tself.nextQuestion();\r\n\t\t\t});\r\n\r\n\t\t\t//press enter to jump to the next question\r\n\t\t\tdocument.addEventListener('keydown', function(event) {\r\n\t\t\t\tvar keyCode = event.keyCode || event.which;\r\n\r\n\t\t\t\tif(keyCode == 13) {\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tself.nextQuestion();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t//disable action on tab\r\n\t\t\tthis.el.addEventListener( 'keydown', function( ev ) {\r\n\t\t\t\tvar keyCode = ev.keyCode || ev.which;\r\n\t\t\t\t// tab\r\n\t\t\t\tif( keyCode === 9 ) {\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t} \r\n\t\t\t});\r\n\t\t},\r\n\t\tnextQuestion: function() {\r\n\t\t\tif(!this.validate()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//check if the form is filled\r\n\t\t\tif(this.current === this.questionsCount - 1 ) {\r\n\t\t\t\tthis.isFilled = true;\r\n\t\t\t}\r\n\t\t\t//clear error if it is displayed and update progress\r\n\t\t\tthis.clearError();\r\n\t\t\t// current question\r\n\t\t\tvar currentQuestion = this.questions[ this.current ];\r\n\r\n\t\t\t// increment current question iterator\r\n\t\t\t++this.current;\r\n\r\n\t\t\tthis.makeProgress();\r\n\r\n\t\t\tif(!this.isFilled) {\r\n\t\t\t\t// change the current question number/status\r\n\t\t\t\tthis.updateQuestionNumber();\r\n\t\t\t\t\r\n\t\t\t\tvar nextQuestion = this.questions[this.current];\r\n\t\t\t\t//add class 'show-next' to the form element to triiger animation on all succesor elements\r\n\t\t\t\tclassie.addClass(this.el, 'show-next');\r\n\r\n\t\t\t\t//hide current question and show next question\r\n\t\t\t\tclassie.removeClass(currentQuestion, 'current');\r\n\t\t\t\tclassie.addClass(nextQuestion, 'current');\r\n\t\t\t}\r\n\r\n\t\t\t// after animation ends, remove class \"show-next\" from form element and change current question placeholder\r\n\t\t\tvar self = this,\r\n\t\t\tonEndTransitionFn = function( ev ) {\r\n\t\t\t\tif( support.transitions ) {\r\n\t\t\t\t\tthis.removeEventListener( transEndEventName, onEndTransitionFn );\r\n\t\t\t\t}\r\n\t\t\t\tif( self.isFilled ) {\r\n\t\t\t\t\tself.submit();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tclassie.removeClass( self.el, 'show-next' );\r\n\t\t\t\t\tself.currentNum.innerHTML = self.nextQuestionNum.innerHTML;\r\n\t\t\t\t\tself.questionStatus.removeChild( self.nextQuestionNum );\r\n\t\t\t\t\t// force the focus on the next input\r\n\t\t\t\t\tnextQuestion.querySelector( 'input' ).focus();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif( support.transitions ) this.progress.addEventListener( transEndEventName, onEndTransitionFn );\r\n\t\t\telse onEndTransitionFn();\r\n\t\t},\r\n\t\tmakeProgress: function() {\r\n\t\t\tthis.progress.style.width = this.current * (100/this.questionsCount) + '%';\r\n\t\t},\r\n\t\tvalidate: function() {\r\n\t\t\tvar inputValue = this.questions[this.current].querySelector('input').value;\r\n\r\n\t\t\tif(inputValue === '') {\r\n\t\t\t\tthis.showError('EMPTYSTR');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}, \r\n\t\tupdateQuestionNumber: function() {\r\n\t\t\t// first, create next question number placeholder\r\n\t\t\tthis.nextQuestionNum = document.createElement( 'span' );\r\n\t\t\tthis.nextQuestionNum.className = 'number-next';\r\n\t\t\tthis.nextQuestionNum.innerHTML = Number( this.current + 1 );\r\n\t\t\t// insert it in the DOM\r\n\t\t\tthis.questionStatus.appendChild( this.nextQuestionNum );\r\n\t\t},\r\n\t\tshowError: function(err) {\r\n\t\t\tvar message = '';\r\n\t\t\tswitch(err) {\r\n\t\t\t\tcase 'EMPTYSTR' :\r\n\t\t\t\tmessage = 'Please fill the field before continuing!';\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'INVALIDEMAIL' :\r\n\t\t\t\tmessage = 'Please enter valid email address!';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.error.innerHTML = message;\r\n\t\t\tclassie.addClass(this.error, 'show');\r\n\t\t}, \r\n\t\tclearError: function() {\r\n\t\t\tthis.error.innerHTML = '';\r\n\t\t\tclassie.removeClass(this.error, 'show');\t\r\n\t\t}, \r\n\t\tsubmit: function() {\r\n\t\t\tthis.options.onSubmit(this.el);\r\n\t\t}\r\n\t};\r\n\r\n\tStepsForm.init.prototype = StepsForm.prototype;\r\n\r\n\t//atach newly created object to the global object\r\n\twindow.StepsForm = StepsForm;\r\n})(window);"],"sourceRoot":"/source/"}